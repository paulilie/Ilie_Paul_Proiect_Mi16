//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyItems", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class MyItems : object
    {
        
        private System.Collections.Generic.List<ServiceReference1.Dinamic> DinamicsField;
        
        private ServiceReference1.Event EventField;
        
        private string IDateField;
        
        private string IDeleteField;
        
        private string IDescriptionField;
        
        private int IIdField;
        
        private string IIsPhotoField;
        
        private string IMarkField;
        
        private string INameField;
        
        private string IPathField;
        
        private string ITypeField;
        
        private ServiceReference1.Place PlaceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReference1.Dinamic> Dinamics
        {
            get
            {
                return this.DinamicsField;
            }
            set
            {
                this.DinamicsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.Event Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDate
        {
            get
            {
                return this.IDateField;
            }
            set
            {
                this.IDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDelete
        {
            get
            {
                return this.IDeleteField;
            }
            set
            {
                this.IDeleteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDescription
        {
            get
            {
                return this.IDescriptionField;
            }
            set
            {
                this.IDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IId
        {
            get
            {
                return this.IIdField;
            }
            set
            {
                this.IIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IIsPhoto
        {
            get
            {
                return this.IIsPhotoField;
            }
            set
            {
                this.IIsPhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMark
        {
            get
            {
                return this.IMarkField;
            }
            set
            {
                this.IMarkField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IName
        {
            get
            {
                return this.INameField;
            }
            set
            {
                this.INameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPath
        {
            get
            {
                return this.IPathField;
            }
            set
            {
                this.IPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IType
        {
            get
            {
                return this.ITypeField;
            }
            set
            {
                this.ITypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.Place Place
        {
            get
            {
                return this.PlaceField;
            }
            set
            {
                this.PlaceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Event : object
    {
        
        private int EIdField;
        
        private string ENameField;
        
        private System.Collections.Generic.List<ServiceReference1.MyItems> MyItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EId
        {
            get
            {
                return this.EIdField;
            }
            set
            {
                this.EIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EName
        {
            get
            {
                return this.ENameField;
            }
            set
            {
                this.ENameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReference1.MyItems> MyItems
        {
            get
            {
                return this.MyItemsField;
            }
            set
            {
                this.MyItemsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Place", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Place : object
    {
        
        private System.Collections.Generic.List<ServiceReference1.MyItems> MyItemsField;
        
        private int PIDField;
        
        private string PNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReference1.MyItems> MyItems
        {
            get
            {
                return this.MyItemsField;
            }
            set
            {
                this.MyItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PID
        {
            get
            {
                return this.PIDField;
            }
            set
            {
                this.PIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PName
        {
            get
            {
                return this.PNameField;
            }
            set
            {
                this.PNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dinamic", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Dinamic : object
    {
        
        private string DDescriptionField;
        
        private int DIdField;
        
        private System.Collections.Generic.List<ServiceReference1.MyItems> MyItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DDescription
        {
            get
            {
                return this.DDescriptionField;
            }
            set
            {
                this.DDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DId
        {
            get
            {
                return this.DIdField;
            }
            set
            {
                this.DIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReference1.MyItems> MyItems
        {
            get
            {
                return this.MyItemsField;
            }
            set
            {
                this.MyItemsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IItemsService")]
    public interface IItemsService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItems", ReplyAction="http://tempuri.org/IItemsService/GetItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> GetItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddEvents", ReplyAction="http://tempuri.org/IItemsService/AddEventsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Event> AddEventsAsync(string NameEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddLocation", ReplyAction="http://tempuri.org/IItemsService/AddLocationResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Place> AddLocationAsync(string NameLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/MarkToDelete", ReplyAction="http://tempuri.org/IItemsService/MarkToDeleteResponse")]
        System.Threading.Tasks.Task MarkToDeleteAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetPlaceByName", ReplyAction="http://tempuri.org/IItemsService/GetPlaceByNameResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Place> GetPlaceByNameAsync(string NameLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetEventByName", ReplyAction="http://tempuri.org/IItemsService/GetEventByNameResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Event> GetEventByNameAsync(string NameEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddItems", ReplyAction="http://tempuri.org/IItemsService/AddItemsResponse")]
        System.Threading.Tasks.Task AddItemsAsync(ServiceReference1.MyItems item, string eveniment, string loc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/Move", ReplyAction="http://tempuri.org/IItemsService/MoveResponse")]
        System.Threading.Tasks.Task MoveAsync(string path1, string path2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/RemoveWithPath", ReplyAction="http://tempuri.org/IItemsService/RemoveWithPathResponse")]
        System.Threading.Tasks.Task RemoveWithPathAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/Remove", ReplyAction="http://tempuri.org/IItemsService/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(ServiceReference1.MyItems item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsByPlace", ReplyAction="http://tempuri.org/IItemsService/GetItemsByPlaceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> GetItemsByPlaceAsync(ServiceReference1.Place place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsByProperty", ReplyAction="http://tempuri.org/IItemsService/GetItemsByPropertyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> GetItemsByPropertyAsync(ServiceReference1.Dinamic property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/SearchByProperty", ReplyAction="http://tempuri.org/IItemsService/SearchByPropertyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> SearchByPropertyAsync(string flag, string property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/FindItem", ReplyAction="http://tempuri.org/IItemsService/FindItemResponse")]
        System.Threading.Tasks.Task<ServiceReference1.MyItems> FindItemAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/getPlaceByItem", ReplyAction="http://tempuri.org/IItemsService/getPlaceByItemResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Place> getPlaceByItemAsync(string Path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemById", ReplyAction="http://tempuri.org/IItemsService/GetItemByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.MyItems> GetItemByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/getEventByItem", ReplyAction="http://tempuri.org/IItemsService/getEventByItemResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Event> getEventByItemAsync(string Path);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface IItemsServiceChannel : ServiceReference1.IItemsService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class ItemsServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IItemsService>, ServiceReference1.IItemsService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ItemsServiceClient() : 
                base(ItemsServiceClient.GetDefaultBinding(), ItemsServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IItemsService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ItemsServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ItemsServiceClient.GetBindingForEndpoint(endpointConfiguration), ItemsServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ItemsServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ItemsServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ItemsServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ItemsServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ItemsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> GetItemsAsync()
        {
            return base.Channel.GetItemsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Event> AddEventsAsync(string NameEvent)
        {
            return base.Channel.AddEventsAsync(NameEvent);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Place> AddLocationAsync(string NameLocation)
        {
            return base.Channel.AddLocationAsync(NameLocation);
        }
        
        public System.Threading.Tasks.Task MarkToDeleteAsync(string path)
        {
            return base.Channel.MarkToDeleteAsync(path);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Place> GetPlaceByNameAsync(string NameLocation)
        {
            return base.Channel.GetPlaceByNameAsync(NameLocation);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Event> GetEventByNameAsync(string NameEvent)
        {
            return base.Channel.GetEventByNameAsync(NameEvent);
        }
        
        public System.Threading.Tasks.Task AddItemsAsync(ServiceReference1.MyItems item, string eveniment, string loc)
        {
            return base.Channel.AddItemsAsync(item, eveniment, loc);
        }
        
        public System.Threading.Tasks.Task MoveAsync(string path1, string path2)
        {
            return base.Channel.MoveAsync(path1, path2);
        }
        
        public System.Threading.Tasks.Task RemoveWithPathAsync(string path)
        {
            return base.Channel.RemoveWithPathAsync(path);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(ServiceReference1.MyItems item)
        {
            return base.Channel.RemoveAsync(item);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> GetItemsByPlaceAsync(ServiceReference1.Place place)
        {
            return base.Channel.GetItemsByPlaceAsync(place);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> GetItemsByPropertyAsync(ServiceReference1.Dinamic property)
        {
            return base.Channel.GetItemsByPropertyAsync(property);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.MyItems>> SearchByPropertyAsync(string flag, string property)
        {
            return base.Channel.SearchByPropertyAsync(flag, property);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.MyItems> FindItemAsync(string path)
        {
            return base.Channel.FindItemAsync(path);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Place> getPlaceByItemAsync(string Path)
        {
            return base.Channel.getPlaceByItemAsync(Path);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.MyItems> GetItemByIdAsync(int id)
        {
            return base.Channel.GetItemByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Event> getEventByItemAsync(string Path)
        {
            return base.Channel.getEventByItemAsync(Path);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IItemsService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IItemsService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ItemsServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IItemsService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ItemsServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IItemsService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IItemsService,
        }
    }
}
